AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service on AWS Fargate, hosted in a public subnet, and accessible via a public load balancer.
Parameters:
  Subnet1Id:
    Type: String
    Description: The name of the parent Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.

  Subnet2Id:
    Type: String
    Description: The name of the parent Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.

  Subnet3Id:
    Type: String
    Description: The name of the parent Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.

  SecurityGroups:
    Type: String
    Description: The name of the parent Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.

  DBClusterIdentifier:
    Type: String
    Description: The name of the database cluster
  DBName:
    Type: String
    Description: The name of the database

Resources:

  MyRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: "allen_backend_registry"

  AllenBackendLogStream:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: '/fargate/taa_engine'
      RetentionInDays: 7


  AuroraSecrets:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: Allen-Backend-Secrets
      GenerateSecretString:
        PasswordLength: 15
        ExcludeCharacters: '"@/\~<=;(){}-_$^!`*&'
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: "password"

  AuroraDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Auto generated by Cloudformation template"
      SubnetIds:
        - !Ref Subnet1Id
        - !Ref Subnet2Id
        - !Ref Subnet3Id

  Aurora:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      DatabaseName: !Ref DBName
      DBClusterIdentifier: !Ref DBClusterIdentifier
      MasterUsername: !Sub '{{resolve:secretsmanager:${AuroraSecrets}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${AuroraSecrets}:SecretString:password}}'
      Engine: aurora-mysql
      EngineMode: serverless
      DBSubnetGroupName: !Ref AuroraDBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref 'SecurityGroups'
      ScalingConfiguration:
        AutoPause: true
        MinCapacity: 1
        MaxCapacity: 2
        SecondsUntilAutoPause: 3600 # 1h

  LinkSecretsToAurora:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: !Ref AuroraSecrets
      TargetId: !Ref Aurora
      TargetType: AWS::RDS::DBCluster

Outputs:
  AuroraSecretsARN:
    Value: !Ref LinkSecretsToAurora
    Export:
      Name: !Sub "${AWS::StackName}-AuroraSecretsARN"